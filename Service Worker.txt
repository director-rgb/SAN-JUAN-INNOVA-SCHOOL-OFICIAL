// sw.js - Service Worker

const CACHE_NAME = 'asistencia-escolar-cache-v1';
const urlsToCache = [
  '/',
  'index.html',
  'manifest.json',
  'assets/icon-192x192.png',
  'assets/icon-512x512.png',
  'https://cdn.tailwindcss.com',
  'https://unpkg.com/lucide-react@latest/dist/lucide-react.js',
  'https://www.gstatic.com/firebasejs/9.19.1/firebase-app-compat.js',
  'https://www.gstatic.com/firebasejs/9.19.1/firebase-auth-compat.js',
  'https://www.gstatic.com/firebasejs/9.19.1/firebase-firestore-compat.js'
];

self.addEventListener('install', event => {
  // Realiza la instalación del SW
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => {
        console.log('Cache abierta');
        return cache.addAll(urlsToCache);
      })
  );
});

self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request)
      .then(response => {
        // Si se encuentra en caché, se devuelve. Si no, se busca en la red.
        return response || fetch(event.request);
      })
  );
});

self.addEventListener('activate', event => {
  const cacheWhitelist = [CACHE_NAME];
  event.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames.map(cacheName => {
          if (cacheWhitelist.indexOf(cacheName) === -1) {
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});

// Escuchar notificaciones push (requiere configuración adicional de Firebase Messaging)
self.addEventListener('push', event => {
  const notificationData = event.data.json();
  const title = notificationData.title;
  const options = {
    body: notificationData.body,
    icon: 'assets/icon-192x192.png'
  };

  event.waitUntil(self.registration.showNotification(title, options));
});
